@page "/"

@using System.IO;
@using System.Text;

<input type="checkbox" @bind="@ReproduceBug" /> Reproduce bug<br/>
<button @onclick="RunTest">Run Test</button>
<pre>
@Output
</pre>

@code {
    public bool ReproduceBug = false;
    public string Output { get; set; }
    private int i;

    async Task RunTest()
    {
        i = 0;
        var expected = $"1{Environment.NewLine}2";
        List<string> fileContent;

        fileContent = ReproduceBug ?
            await WhileHeaderBrokenAsync() :
            await WhileHeaderWorkingAsync();

        var content = string.Join(Environment.NewLine, fileContent);

        Output = $"fileContent: '{content}' {(content == expected ? "OK" : "KO")}";
    }

    public async Task<List<string>> WhileHeaderWorkingAsync()
    {
        string line;
        var result = new List<string>();
        line = await ReadLineAsync();
        while (line != null)
        {
            result.Add(line);
            line = await ReadLineAsync();
        }
        return result;
    }

    public async Task<List<string>> WhileHeaderBrokenAsync()
    {
        string line;
        var result = new List<string>();
        while ((line = await ReadLineAsync()) != null)
        {
            result.Add(line);
        }
        return result;
    }

    public async Task<string> ReadLineAsync()
    {
        this.i++;
        if (this.i > 2)
        {
            return null;
        }

        return i.ToString();
    }
}